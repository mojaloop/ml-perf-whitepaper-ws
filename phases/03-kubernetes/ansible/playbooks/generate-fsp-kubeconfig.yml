---
- name: Get MicroK8s config from FSP node
  shell: microk8s config
  delegate_to: "{{ fsp_node }}"
  register: fsp_config_raw
  changed_when: false
  become: yes

- name: Parse FSP cluster config
  set_fact:
    fsp_kubeconfig: "{{ fsp_config_raw.stdout | from_yaml }}"

- name: Extract certificates for FSP cluster
  set_fact:
    fsp_ca_cert: "{{ fsp_kubeconfig.clusters[0].cluster['certificate-authority-data'] }}"
    fsp_client_cert: "{{ fsp_kubeconfig.users[0].user['client-certificate-data'] }}"
    fsp_client_key: "{{ fsp_kubeconfig.users[0].user['client-key-data'] }}"

- name: Generate FSP cluster kubeconfig with ProxyCommand
  template:
    src: ../templates/kubeconfig-proxy.j2
    dest: "{{ kubeconfig_dir }}/kubeconfig-{{ fsp_node }}.yaml"
    mode: '0600'
  vars:
    cluster_name: "{{ fsp_node }}"
    api_server_host: "{{ hostvars[fsp_node]['private_ip'] }}"
    ca_cert_data: "{{ fsp_ca_cert }}"
    client_cert_data: "{{ fsp_client_cert }}"
    client_key_data: "{{ fsp_client_key }}"