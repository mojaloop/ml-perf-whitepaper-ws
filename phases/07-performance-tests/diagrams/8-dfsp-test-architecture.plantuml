@startuml 8-dfsp-test-architecture
!theme plain
skinparam backgroundColor #FEFEFE
skinparam packageBackgroundColor #F8F8F8
skinparam rectangleBackgroundColor #E8F4F8

package "K6 Load Testing Cluster" {
    rectangle "K6 Workers\n(Distributed Load Generation)" as K6 #FFE5B4
}

package "Mojaloop Switch" #E8F4F8 {
    rectangle "Account Lookup\nService" as ALS
    rectangle "Quoting\nService" as QS
    rectangle "ML API\nAdapter" as MLAPI
    rectangle "Central\nLedger" as CL
    
    MLAPI --> ALS : 1. Lookup
    MLAPI --> QS : 2. Quote
    MLAPI --> CL : 3. Transfer
}

package "Sending DFSPs" #D4F1D4 {
    rectangle "perffsp-1\n40% load\n(400 TPS)" as FSP1 #90EE90
    rectangle "perffsp-2\n25% load\n(250 TPS)" as FSP2 #98FB98
    rectangle "perffsp-3\n20% load\n(200 TPS)" as FSP3 #B0FFB0
    rectangle "perffsp-4\n15% load\n(150 TPS)" as FSP4 #C8FFC8
}

package "Receiving DFSPs" #FFE5E5 {
    rectangle "perffsp-5\n(receives from 1)" as FSP5 #FFB6C1
    rectangle "perffsp-6\n(receives from 2)" as FSP6 #FFC0CB
    rectangle "perffsp-7\n(receives from 3)" as FSP7 #FFD0DB
    rectangle "perffsp-8\n(receives from 4)" as FSP8 #FFE0EB
}

K6 ==> FSP1 : 400 TPS
K6 ==> FSP2 : 250 TPS
K6 ==> FSP3 : 200 TPS
K6 ==> FSP4 : 150 TPS

FSP1 --> MLAPI : P2P Transfers
FSP2 --> MLAPI : P2P Transfers
FSP3 --> MLAPI : P2P Transfers
FSP4 --> MLAPI : P2P Transfers

CL ..> FSP5 : Notifications
CL ..> FSP6 : Notifications
CL ..> FSP7 : Notifications
CL ..> FSP8 : Notifications

note bottom of K6
  Total: 1000 TPS
  Asymmetric load distribution
  simulates real-world patterns
end note

note right of Mojaloop Switch
  Full security enabled:
  - mTLS between services
  - JWS message signing
  - ILP validation
end note

@enduml