# Ansible Inventory - Auto-generated by Terraform
# Generated at: ${timestamp()}

all:
  vars:
    ansible_user: ubuntu
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -q ubuntu@${bastion_public_ip}"'
    ansible_python_interpreter: /usr/bin/python3

    # Project variables
    project_name: ${project_name}
    environment: ${environment}
    region: ${region}

    # Kubernetes configuration
    k8s_version: "1.28/stable"
    k8s_cluster_name: "mojaloop-perf"

  children:
    bastion:
      hosts:
        bastion-host:
          ansible_host: ${bastion_public_ip}
          ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
          public_ip: ${bastion_public_ip}
          private_ip: ${bastion_private_ip}
          instance_id: ${bastion_instance_id}

    switch:
      hosts:
%{ for name, node in switch_nodes ~}
        ${name}:
          ansible_host: ${node.private_ip}
          private_ip: ${node.private_ip}
          instance_id: ${node.instance_id}
          instance_type: m4.2xlarge
          role: ml-sw
          k8s_role: control-plane
%{ endfor ~}

    dfsps:
      hosts:
%{ for name, node in dfsp_nodes ~}
        ${name}:
          ansible_host: ${node.private_ip}
          private_ip: ${node.private_ip}
          instance_id: ${node.instance_id}
          instance_type: m4.xlarge
          role: ml-dfsp
          k8s_role: worker
%{ endfor ~}

    # Grouping by Kubernetes roles
    k8s_control_plane:
      hosts:
%{ for name, node in switch_nodes ~}
        ${name}:
%{ endfor ~}

    k8s_workers:
      hosts:
%{ for name, node in dfsp_nodes ~}
        ${name}:
%{ endfor ~}

    # Grouping all k8s nodes
    k8s_cluster:
      children:
        k8s_control_plane:
        k8s_workers:
      vars:
        k8s_pod_network_cidr: "10.244.0.0/16"
        k8s_service_cidr: "10.96.0.0/12"